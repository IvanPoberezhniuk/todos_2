{"version":3,"sources":["components/toDos--footer.jsx","components/toDos--list.jsx","components/ToDos.jsx","App.js","index.js"],"names":["FILTER","ToDosFooter","props","react_default","a","createElement","Fragment","className","completedTasks","onClick","filterTasks","clearCompleted","ToDosList","data","map","task","key","id","toggleIsCompleted","type","defaultChecked","isCompleted","removeTask","randomstring","require","ToDos","state","actualData","inputValue","addTask","event","preventDefault","test","_this","setState","prevState","updateData","concat","Object","toConsumableArray","generate","index","findIndex","splice","filterBy","chosenFilter","filter","taskIndex","changeStateInputValue","target","value","localData","JSON","parse","window","localStorage","getItem","this","_this2","addEventListener","setItem","stringify","placeholder","autoComplete","onChange","hidden","length","toDos_list","toDos_footer","Component","App","ToDos_ToDos","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"qRAEMA,EACI,SADJA,EAEO,YA6BEC,EA1BG,SAAAC,GAChB,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,WACGH,EAAMM,eAAgB,IADzB,cAIAL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,OAAKI,QAAS,kBAAMP,EAAMQ,gBAA1B,OACAP,EAAAC,EAAAC,cAAA,OAAKI,QAAS,kBAAMP,EAAMQ,YAAYV,KAAtC,UACAG,EAAAC,EAAAC,cAAA,OAAKI,QAAS,kBAAMP,EAAMQ,YAAYV,KAAtC,cAIFG,EAAAC,EAAAC,cAAA,OACEI,QAAS,kBAAMP,EAAMS,kBACrBJ,UAAU,yBAFZ,sBCKOK,EAzBC,SAAAV,GACd,OAAOA,EAAMW,KAAKC,IAAI,SAAAC,GACpB,OACEZ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBAAsBS,IAAKD,EAAKE,IAC7Cd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEI,QAAS,kBAAMP,EAAMgB,kBAAkBH,EAAKE,KAC5CE,KAAK,WACLZ,UAAU,gBACVa,eAAgBL,EAAKM,cAEvBlB,EAAAC,EAAAC,cAAA,QAAME,UAAU,eAAeQ,EAAKA,OAEtCZ,EAAAC,EAAAC,cAAA,UACEc,KAAK,SACLZ,UAAU,uBACVE,QAAS,kBAAMP,EAAMoB,WAAWP,EAAKE,MAHvC,SCZJM,EAAeC,EAAQ,IAENC,6MACnBC,MAAQ,CACNb,KAAM,GACNc,WAAY,GACZC,WAAY,MAYdC,QAAU,SAAAC,GACRA,EAAMC,iBAEF,OAAOC,KAAKC,EAAKP,MAAME,aAGzBK,EAAKC,SAAS,SAAAC,GACZ,IAAIC,EAAU,GAAAC,OAAAC,OAAAC,EAAA,EAAAD,CACTH,EAAUR,YADD,CAEZ,CACEZ,KAAMoB,EAAUP,WAChBP,aAAa,EACbJ,GAAIM,EAAaiB,SAAS,MAI9B,MAAO,CACL3B,KAAMuB,EACNT,WAAYS,EACZR,WAAY,SAMpBN,WAAa,SAAAL,GACXgB,EAAKC,SAAS,SAAAC,GACZ,IAAIM,EAAQN,EAAUR,WAAWe,UAAU,SAAA3B,GAAI,OAAIA,EAAKE,KAAOA,IAE/D,OADAkB,EAAUR,WAAWgB,OAAOF,EAAO,GAC5B,CACL5B,KAAKyB,OAAAC,EAAA,EAAAD,CAAKH,EAAUR,kBAK1BjB,YAAc,SAAAkC,GACZ,IAAIC,EAAe,SAAAhC,GACjB,OAAQ+B,GACN,QACE,OAAO/B,EACT,IAAK,SACH,OAAOA,EAAKiC,OAAO,SAAA/B,GAAI,OAAKA,EAAKM,cACnC,IAAK,YACH,OAAOR,EAAKiC,OAAO,SAAA/B,GAAI,OAAIA,EAAKM,gBAItCY,EAAKC,SAAS,SAAAC,GAAS,MAAK,CAC1BtB,KAAMgC,EAAaV,EAAUR,kBAIjCT,kBAAoB,SAAAD,GAClBgB,EAAKC,SAAS,SAAAC,GACZ,IAAIY,EAAYZ,EAAUR,WAAWe,UAAU,SAAA3B,GAAI,OAAIA,EAAKE,KAAOA,IAMnE,OAJAkB,EAAUR,WAAWoB,GAAW1B,aAAec,EAAUR,WACvDoB,GACA1B,YAEK,CACLR,KAAMsB,EAAUR,iBAKtBhB,eAAiB,WACfsB,EAAKC,SAAS,SAAAC,GAIZ,OAHAA,EAAUR,WAAaQ,EAAUR,WAAWmB,OAC1C,SAAA/B,GAAI,OAAyB,IAArBA,EAAKM,cAER,CACLR,KAAMsB,EAAUR,iBAKtBqB,sBAAwB,SAAAlB,GACtBG,EAAKC,SAAS,CACZN,WAAYE,EAAMmB,OAAOC,0MAvFvBC,EAAYC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,eAAiB,GAExEC,KAAKvB,SAAS,SAAAC,GAAS,MAAK,CAC1BtB,KAAI,GAAAwB,OAAAC,OAAAC,EAAA,EAAAD,CAAMH,EAAUtB,MAAhByB,OAAAC,EAAA,EAAAD,CAAyBa,IAC7BxB,WAAU,GAAAU,OAAAC,OAAAC,EAAA,EAAAD,CAAMH,EAAUtB,MAAhByB,OAAAC,EAAA,EAAAD,CAAyBa,0IAuF9B,IAAAO,EAAAD,KAQP,OAPAH,OAAOK,iBAAiB,eAAgB,kBACtCL,OAAOC,aAAaK,QAClB,YACAR,KAAKS,UAAUH,EAAKhC,MAAMC,eAK5BxB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBAAd,SACAJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,SACdJ,EAAAC,EAAAC,cAAA,SACEc,KAAK,OACL2C,YAAY,wBACZvD,UAAU,aACVwD,aAAa,MACbb,MAAOO,KAAK/B,MAAME,WAClBoC,SAAU,SAAAlC,GAAK,OAAI4B,EAAKV,sBAAsBlB,MAEhD3B,EAAAC,EAAAC,cAAA,UAAQc,KAAK,SAASV,QAAS,SAAAqB,GAAK,OAAI4B,EAAK7B,QAAQC,IAAQmC,QAAM,MAEjER,KAAK/B,MAAMb,KAAKqD,QAGhB/D,EAAAC,EAAAC,cAAC8D,EAAD,CACEtD,KAAM4C,KAAK/B,MAAMb,KACjBK,kBAAmBuC,KAAKvC,kBACxBI,WAAYmC,KAAKnC,aAGrBnB,EAAAC,EAAAC,cAAC+D,EAAD,CACE1D,YAAa+C,KAAK/C,YAClBC,eAAgB8C,KAAK9C,eACrBH,eACEiD,KAAK/B,MAAMb,KAAKiC,OAAO,SAAA/B,GAAI,OAAyB,IAArBA,EAAKM,cAAsB6C,kBAtIrCG,aCWpBC,2LARX,OACEnE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACkE,EAAD,cAJUF,cCDlBG,IAASC,OAAOtE,EAAAC,EAAAC,cAACqE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.7479a85b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FILTER = {\r\n  active: \"active\",\r\n  completed: \"completed\"\r\n};\r\n\r\nlet ToDosFooter = props => {\r\n  return (\r\n    <>\r\n      <div className=\"toDos__footer\">\r\n        <div>\r\n          {props.completedTasks}{\" \"}\r\n          items left\r\n        </div>\r\n        <div className=\"toDos__filter\">\r\n          <div onClick={() => props.filterTasks()}>All</div>\r\n          <div onClick={() => props.filterTasks(FILTER.active)}>Active</div>\r\n          <div onClick={() => props.filterTasks(FILTER.completed)}>\r\n            Completed\r\n          </div>\r\n        </div>\r\n        <div\r\n          onClick={() => props.clearCompleted()}\r\n          className=\"toDos__clearCompleted\"\r\n        >\r\n          Clear Completed\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ToDosFooter;\r\n","import React from \"react\";\r\n\r\nlet ToDosList = props => {\r\n  return props.data.map(task => {\r\n    return (\r\n      <div className=\"toDos__dropDownTask\" key={task.id}>\r\n        <div>\r\n          <input\r\n            onClick={() => props.toggleIsCompleted(task.id)}\r\n            type=\"checkbox\"\r\n            className=\"toDos__toggle\"\r\n            defaultChecked={task.isCompleted}\r\n          />\r\n          <span className=\"toDos__task\">{task.task}</span>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"toDos__button-delete\"\r\n          onClick={() => props.removeTask(task.id)}\r\n        >\r\n          x\r\n        </button>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nexport default ToDosList;\r\n","import React, { Component } from \"react\";\r\nimport ToDosFooter from \"./toDos--footer.jsx\";\r\nimport ToDosList from \"./toDos--list.jsx\";\r\nlet randomstring = require(\"randomstring\");\r\n\r\nexport default class ToDos extends Component {\r\n  state = {\r\n    data: [],\r\n    actualData: [],\r\n    inputValue: \"\"\r\n  };\r\n\r\n  async componentDidMount() {\r\n    let localData = JSON.parse(window.localStorage.getItem(\"localData\")) || [];\r\n\r\n    this.setState(prevState => ({\r\n      data: [...prevState.data, ...localData],\r\n      actualData: [...prevState.data, ...localData]\r\n    }));\r\n  }\r\n\r\n  addTask = event => {\r\n    event.preventDefault();\r\n\r\n    if (/^ *$/.test(this.state.inputValue)) {\r\n      return;\r\n    } else {\r\n      this.setState(prevState => {\r\n        let updateData = [\r\n          ...prevState.actualData,\r\n          {\r\n            task: prevState.inputValue,\r\n            isCompleted: false,\r\n            id: randomstring.generate(5)\r\n          }\r\n        ];\r\n\r\n        return {\r\n          data: updateData,\r\n          actualData: updateData,\r\n          inputValue: \"\"\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  removeTask = id => {\r\n    this.setState(prevState => {\r\n      let index = prevState.actualData.findIndex(task => task.id === id);\r\n      prevState.actualData.splice(index, 1);\r\n      return {\r\n        data: [...prevState.actualData]\r\n      };\r\n    });\r\n  };\r\n\r\n  filterTasks = filterBy => {\r\n    let chosenFilter = data => {\r\n      switch (filterBy) {\r\n        default:\r\n          return data;\r\n        case \"active\":\r\n          return data.filter(task => !task.isCompleted);\r\n        case \"completed\":\r\n          return data.filter(task => task.isCompleted);\r\n      }\r\n    };\r\n\r\n    this.setState(prevState => ({\r\n      data: chosenFilter(prevState.actualData)\r\n    }));\r\n  };\r\n\r\n  toggleIsCompleted = id => {\r\n    this.setState(prevState => {\r\n      let taskIndex = prevState.actualData.findIndex(task => task.id === id);\r\n\r\n      prevState.actualData[taskIndex].isCompleted = !prevState.actualData[\r\n        taskIndex\r\n      ].isCompleted;\r\n\r\n      return {\r\n        data: prevState.actualData\r\n      };\r\n    });\r\n  };\r\n\r\n  clearCompleted = () => {\r\n    this.setState(prevState => {\r\n      prevState.actualData = prevState.actualData.filter(\r\n        task => task.isCompleted !== true\r\n      );\r\n      return {\r\n        data: prevState.actualData\r\n      };\r\n    });\r\n  };\r\n\r\n  changeStateInputValue = event => {\r\n    this.setState({\r\n      inputValue: event.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    window.addEventListener(\"beforeunload\", () =>\r\n      window.localStorage.setItem(\r\n        \"localData\",\r\n        JSON.stringify(this.state.actualData)\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div className=\"toDos__container\">\r\n        <h1 className=\"toDos__header\">todos</h1>\r\n        <form className=\"toDos\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"What need to be done?\"\r\n            className=\"input-base\"\r\n            autoComplete=\"off\"\r\n            value={this.state.inputValue}\r\n            onChange={event => this.changeStateInputValue(event)}\r\n          />\r\n          <button type=\"submit\" onClick={event => this.addTask(event)} hidden />\r\n\r\n          {!this.state.data.length ? (\r\n            false\r\n          ) : (\r\n            <ToDosList\r\n              data={this.state.data}\r\n              toggleIsCompleted={this.toggleIsCompleted}\r\n              removeTask={this.removeTask}\r\n            />\r\n          )}\r\n          <ToDosFooter\r\n            filterTasks={this.filterTasks}\r\n            clearCompleted={this.clearCompleted}\r\n            completedTasks={\r\n              this.state.data.filter(task => task.isCompleted === true).length\r\n            }\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport ToDos from \"./components/ToDos\";\nimport \"./App.css\";\n\n// let toDoData = (window.localStorage.toDoData = []);\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <ToDos />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}