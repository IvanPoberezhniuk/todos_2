{"version":3,"sources":["components/todos__footer.jsx","components/todos__list.jsx","components/Todos.jsx","App.js","index.js"],"names":["TABS","type","TodosFooter","_ref","itemsLeft","changeFilter","clearCompleted","activeTabIndex","activeTabStyle","color","react_default","a","createElement","Fragment","className","map","tab","index","key","onClick","style","MemoTodosList","React","memo","todos","toggleIsCompleted","removeTask","task","id","defaultChecked","isCompleted","randomstring","require","Todos","state","todoList","inputValue","filter","areTodos","saveDataToLocalStorage","window","addEventListener","localStorage","setItem","JSON","stringify","_this","addTask","event","preventDefault","value","test","setState","prevState","concat","Object","toConsumableArray","generate","filterTasks","data","filterBy","newData","taskIndex","findIndex","changeStateInputValue","target","localData","parse","getItem","this","removeEventListener","_this$state","visibleTodos","length","placeholder","autoComplete","onChange","hidden","todos_list","todos_footer","Component","App","Todos_Todos","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.87e50735.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TABS = [{ type: 'All' }, { type: 'Active' }, { type: 'Completed' }];\r\n\r\nconst TodosFooter = ({\r\n  itemsLeft,\r\n  changeFilter,\r\n  clearCompleted,\r\n  activeTabIndex\r\n}) => {\r\n  const activeTabStyle = {\r\n    color: 'rgba(175, 47, 47, 0.452)'\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"todos__footer\">\r\n        <div>{itemsLeft} items left</div>\r\n        <div className=\"todos__filter\">\r\n          {TABS.map((tab, index) => (\r\n            <div\r\n              key={index}\r\n              onClick={() => changeFilter(tab.type, index)}\r\n              style={index === activeTabIndex ? activeTabStyle : null}\r\n            >\r\n              {tab.type}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div onClick={clearCompleted} className=\"todos__clearCompleted\">\r\n          Clear Completed\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodosFooter;\r\n","import React from 'react';\r\n\r\nconst TodosList = ({ todos, toggleIsCompleted, removeTask }) => {\r\n  return todos.map(task => {\r\n    return (\r\n      <div className=\"todos__dropDownTask\" key={task.id}>\r\n        <div className=\"todos__task-wrapper\">\r\n          <input\r\n            onClick={() => toggleIsCompleted(task.id)}\r\n            type=\"checkbox\"\r\n            className=\"todos__toggle\"\r\n            defaultChecked={task.isCompleted}\r\n          />\r\n          <span className=\"todos__toggle--helper\" />\r\n          <span className=\"todos__task\">{task.task}</span>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"todos__button-delete\"\r\n          onClick={() => removeTask(task.id)}\r\n        >\r\n          x\r\n        </button>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nconst MemoTodosList = React.memo(TodosList);\r\n\r\nexport default MemoTodosList;\r\n","import React, { Component } from 'react';\r\nimport TodosFooter from './todos__footer.jsx';\r\nimport TodosList from './todos__list.jsx';\r\nconst randomstring = require('randomstring');\r\n\r\nexport default class Todos extends Component {\r\n  state = {\r\n    todoList: [],\r\n    inputValue: '',\r\n    filter: '',\r\n    areTodos: false,\r\n    activeTabIndex: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    const localData =\r\n      JSON.parse(window.localStorage.getItem('localData')) || [];\r\n\r\n    this.setState({\r\n      todoList: localData,\r\n      areTodos: true\r\n    });\r\n\r\n    this.saveDataToLocalStorage();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('beforeunload', this.saveDataToLocalStorage);\r\n    this.saveDataToLocalStorage();\r\n  }\r\n\r\n  saveDataToLocalStorage = () => {\r\n    window.addEventListener('beforeunload', () =>\r\n      window.localStorage.setItem(\r\n        'localData',\r\n        JSON.stringify(this.state.todoList)\r\n      )\r\n    );\r\n  };\r\n\r\n  addTask = event => {\r\n    event.preventDefault();\r\n    const isEmpty = value => /^ *$/.test(value);\r\n\r\n    if (isEmpty(this.state.inputValue)) {\r\n      return;\r\n    } else {\r\n      this.setState(prevState => {\r\n        const newData = [\r\n          ...prevState.todoList,\r\n          {\r\n            task: prevState.inputValue,\r\n            isCompleted: false,\r\n            id: randomstring.generate(5)\r\n          }\r\n        ];\r\n\r\n        return {\r\n          todoList: newData,\r\n          inputValue: ''\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  removeTask = id => {\r\n    this.setState(prevState => {\r\n      const newData = prevState.todoList.filter(task => task.id !== id);\r\n\r\n      return {\r\n        todoList: newData\r\n      };\r\n    });\r\n  };\r\n\r\n  filterTasks = data => {\r\n    switch (this.state.filter) {\r\n      case 'Active':\r\n        return data.filter(task => !task.isCompleted);\r\n      case 'Completed':\r\n        return data.filter(task => task.isCompleted);\r\n      default:\r\n        return data;\r\n    }\r\n  };\r\n\r\n  changeFilter = (filterBy, index) => {\r\n    this.setState({\r\n      filter: filterBy,\r\n      activeTabIndex: index\r\n    });\r\n  };\r\n\r\n  toggleIsCompleted = id => {\r\n    this.setState(prevState => {\r\n      const newData = [...prevState.todoList];\r\n      const taskIndex = newData.findIndex(task => task.id === id);\r\n\r\n      newData[taskIndex].isCompleted = !newData[taskIndex].isCompleted;\r\n\r\n      return {\r\n        todoList: newData\r\n      };\r\n    });\r\n  };\r\n\r\n  clearCompleted = () => {\r\n    this.setState(prevState => {\r\n      const newData = prevState.todoList.filter(task => !task.isCompleted);\r\n\r\n      return {\r\n        todoList: newData\r\n      };\r\n    });\r\n  };\r\n\r\n  changeStateInputValue = event => {\r\n    this.setState({\r\n      inputValue: event.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { todoList, inputValue, areTodos, activeTabIndex } = this.state;\r\n    const {\r\n      addTask,\r\n      removeTask,\r\n      changeFilter,\r\n      filterTasks,\r\n      toggleIsCompleted,\r\n      clearCompleted,\r\n      changeStateInputValue\r\n    } = this;\r\n\r\n    const visibleTodos = filterTasks(todoList);\r\n    const itemsLeft = todoList.filter(task => task.isCompleted !== true).length;\r\n\r\n    return (\r\n      <div className=\"todos__container\">\r\n        <h1 className=\"todos__header\">todos</h1>\r\n        <form className=\"todos\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"What need to be done?\"\r\n            className=\"input-base\"\r\n            autoComplete=\"off\"\r\n            onChange={changeStateInputValue}\r\n            value={inputValue}\r\n          />\r\n          <button type=\"submit\" onClick={addTask} hidden />\r\n\r\n          {areTodos ? (\r\n            <TodosList\r\n              todos={visibleTodos}\r\n              toggleIsCompleted={toggleIsCompleted}\r\n              removeTask={removeTask}\r\n            />\r\n          ) : null}\r\n          <TodosFooter\r\n            activeTabIndex={activeTabIndex}\r\n            changeFilter={changeFilter}\r\n            clearCompleted={clearCompleted}\r\n            itemsLeft={itemsLeft}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport Todos from './components/Todos';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return <Todos />;\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}