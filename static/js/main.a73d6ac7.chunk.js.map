{"version":3,"sources":["components/toDos__footer.jsx","components/toDos__list.jsx","components/ToDos.jsx","App.js","index.js"],"names":["FILTER","ToDosFooter","_ref","completedTasks","filterTasks","clearCompleted","react_default","a","createElement","Fragment","className","onClick","ToDosList","data","toggleIsCompleted","removeTask","map","task","key","id","type","defaultChecked","isCompleted","randomstring","require","ToDos","state","visibleData","actualData","inputValue","saveDataToLocalStorage","window","addEventListener","localStorage","setItem","JSON","stringify","_this","addTask","event","preventDefault","value","test","setState","prevState","newData","concat","Object","toConsumableArray","generate","filter","filterBy","chosenFilter","taskIndex","findIndex","changeStateInputValue","target","localData","parse","getItem","this","removeEventListener","placeholder","autoComplete","onChange","hidden","length","toDos_list","toDos_footer","Component","App","ToDos_ToDos","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a73d6ac7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst FILTER = {\r\n  active: 'active',\r\n  completed: 'completed'\r\n};\r\n\r\nconst ToDosFooter = ({ completedTasks, filterTasks, clearCompleted }) => {\r\n  return (\r\n    <>\r\n      <div className=\"toDos__footer\">\r\n        <div>{completedTasks} items left</div>\r\n        <div className=\"toDos__filter\">\r\n          <div onClick={filterTasks}>All</div>\r\n          <div onClick={() => filterTasks(FILTER.active)}>Active</div>\r\n          <div onClick={() => filterTasks(FILTER.completed)}>Completed</div>\r\n        </div>\r\n        <div onClick={clearCompleted} className=\"toDos__clearCompleted\">\r\n          Clear Completed\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ToDosFooter;\r\n","import React from 'react';\r\n\r\nconst ToDosList = ({ data, toggleIsCompleted, removeTask }) => {\r\n  return data.map(task => {\r\n    return (\r\n      <div className=\"toDos__dropDownTask\" key={task.id}>\r\n        <div className=\"toDos__task-wrapper\">\r\n          <input\r\n            onClick={() => toggleIsCompleted(task.id)}\r\n            type=\"checkbox\"\r\n            className=\"toDos__toggle\"\r\n            defaultChecked={task.isCompleted}\r\n          />\r\n          <span className=\"toDos__toggle--helper\" />\r\n          <span className=\"toDos__task\">{task.task}</span>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"toDos__button-delete\"\r\n          onClick={() => removeTask(task.id)}\r\n        >\r\n          x\r\n        </button>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nexport default ToDosList;\r\n","import React, { Component } from 'react';\r\nimport ToDosFooter from './toDos__footer.jsx';\r\nimport ToDosList from './toDos__list.jsx';\r\nconst randomstring = require('randomstring');\r\n\r\nexport default class ToDos extends Component {\r\n  state = {\r\n    visibleData: [],\r\n    actualData: [],\r\n    inputValue: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    const localData =\r\n      JSON.parse(window.localStorage.getItem('localData')) || [];\r\n\r\n    this.setState({\r\n      visibleData: [...localData],\r\n      actualData: [...localData]\r\n    });\r\n\r\n    this.saveDataToLocalStorage();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('beforeunload', this.saveDataToLocalStorage);\r\n    this.saveDataToLocalStorage();\r\n  }\r\n\r\n  saveDataToLocalStorage = () => {\r\n    window.addEventListener('beforeunload', () =>\r\n      window.localStorage.setItem(\r\n        'localData',\r\n        JSON.stringify(this.state.actualData)\r\n      )\r\n    );\r\n  };\r\n\r\n  addTask = event => {\r\n    event.preventDefault();\r\n    const isEmpty = value => /^ *$/.test(value);\r\n\r\n    if (isEmpty(this.state.inputValue)) {\r\n      return;\r\n    } else {\r\n      this.setState(prevState => {\r\n        const newData = [\r\n          ...prevState.actualData,\r\n          {\r\n            task: prevState.inputValue,\r\n            isCompleted: false,\r\n            id: randomstring.generate(5)\r\n          }\r\n        ];\r\n\r\n        return {\r\n          visibleData: newData,\r\n          actualData: newData,\r\n          inputValue: ''\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  removeTask = id => {\r\n    this.setState(prevState => {\r\n      const newData = prevState.actualData.filter(task => task.id !== id);\r\n\r\n      return {\r\n        visibleData: newData,\r\n        actualData: newData\r\n      };\r\n    });\r\n  };\r\n\r\n  filterTasks = filterBy => {\r\n    const chosenFilter = data => {\r\n      switch (filterBy) {\r\n        default:\r\n          return data;\r\n        case 'active':\r\n          return data.filter(task => !task.isCompleted);\r\n        case 'completed':\r\n          return data.filter(task => task.isCompleted);\r\n      }\r\n    };\r\n\r\n    this.setState(prevState => ({\r\n      visibleData: chosenFilter(prevState.actualData)\r\n    }));\r\n  };\r\n\r\n  toggleIsCompleted = id => {\r\n    this.setState(prevState => {\r\n      const newData = [...prevState.actualData];\r\n      const taskIndex = newData.findIndex(task => task.id === id);\r\n\r\n      newData[taskIndex].isCompleted = !newData[taskIndex].isCompleted;\r\n\r\n      return {\r\n        visibleData: newData,\r\n        actualData: newData\r\n      };\r\n    });\r\n  };\r\n\r\n  clearCompleted = () => {\r\n    this.setState(prevState => {\r\n      const newData = prevState.actualData.filter(task => !task.isCompleted);\r\n\r\n      return {\r\n        visibleData: newData,\r\n        actualData: newData\r\n      };\r\n    });\r\n  };\r\n\r\n  changeStateInputValue = event => {\r\n    this.setState({\r\n      inputValue: event.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { visibleData } = this.state;\r\n\r\n    return (\r\n      <div className=\"toDos__container\">\r\n        <h1 className=\"toDos__header\">todos</h1>\r\n        <form className=\"toDos\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"What need to be done?\"\r\n            className=\"input-base\"\r\n            autoComplete=\"off\"\r\n            onChange={this.changeStateInputValue}\r\n            value={this.state.inputValue}\r\n          />\r\n          <button type=\"submit\" onClick={this.addTask} hidden />\r\n\r\n          {!visibleData.length ? (\r\n            false\r\n          ) : (\r\n            <ToDosList\r\n              data={visibleData}\r\n              toggleIsCompleted={this.toggleIsCompleted}\r\n              removeTask={this.removeTask}\r\n            />\r\n          )}\r\n          <ToDosFooter\r\n            filterTasks={this.filterTasks}\r\n            clearCompleted={this.clearCompleted}\r\n            completedTasks={\r\n              visibleData.filter(task => task.isCompleted !== true).length\r\n            }\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport ToDos from './components/ToDos';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return <ToDos />;\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}